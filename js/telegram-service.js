import { config } from './config.js';

export async function sendToTelegram(data) {
    const { TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID } = config;

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `
üéØ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å –∫–≤–∏–∑–∞!

üè¢ –¢–∏–ø –±–∏–∑–Ω–µ—Å–∞: ${data.business_type}
üéØ –°—Ñ–µ—Ä–∞: ${data.business_sphere}
üìç –õ–æ–∫–∞—Ü–∏–∏: ${data.locations}
üí∞ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ${data.average_check}

üë§ –ò–º—è: ${data.name}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}

üìÖ –î–∞—Ç–∞ –∑–∞—è–≤–∫–∏: ${new Date().toLocaleString()}
    `.trim();

    try {
        const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: TELEGRAM_CHAT_ID,
                text: message,
                parse_mode: 'HTML'
            })
        });

        if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram');
        }

        return true;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', error);
        throw error;
    }
}
